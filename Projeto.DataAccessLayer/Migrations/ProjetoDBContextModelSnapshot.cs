// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto.DataAccessLayer;

namespace Projeto.DataAccessLayer.Migrations
{
    [DbContext(typeof(ProjetoDBContext))]
    partial class ProjetoDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GandalfInc.DataAccessLayer.Entidades.Morada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Concelho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distrito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Moradas");
                });

            modelBuilder.Entity("GandalfInc.DataAccessLayer.Entidades.Produto", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DetalheVendaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FornecedorIdentificador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("ReferenciaInternacionalProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StockId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Identificador");

                    b.HasIndex("DetalheVendaId");

                    b.HasIndex("FornecedorIdentificador");

                    b.HasIndex("StockId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("GandalfInc.DataAccessLayer.Faturacao.DetalheVenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DetalheVenda");
                });

            modelBuilder.Entity("GandalfInc.DataAccessLayer.Faturacao.PontoDeVenda", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LojaIdentificador")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Identificador");

                    b.HasIndex("LojaIdentificador");

                    b.ToTable("PontoDeVenda");
                });

            modelBuilder.Entity("GandalfInc.DataAccessLayer.Faturacao.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("GandalfInc.DataAccessLayer.Faturacao.Venda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteIdentificador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DetalheVendaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FuncionarioIdentificador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumeroSerie")
                        .HasColumnType("int");

                    b.Property<Guid?>("PontoDeVendaIdentificador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoDePagamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteIdentificador");

                    b.HasIndex("DetalheVendaId");

                    b.HasIndex("FuncionarioIdentificador");

                    b.HasIndex("PontoDeVendaIdentificador");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.CategoriaProduto", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Identificador");

                    b.ToTable("CategoriaProdutos");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Cliente", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("MoradaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroFiscal")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telemovel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificador");

                    b.HasIndex("MoradaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Fornecedor", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("MoradaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroFiscal")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telemovel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificador");

                    b.HasIndex("MoradaId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Funcionario", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificador");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Loja", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gerente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MoradaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroFiscal")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telemovel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificador");

                    b.HasIndex("MoradaId");

                    b.ToTable("Lojas");
                });

            modelBuilder.Entity("GandalfInc.DataAccessLayer.Entidades.Produto", b =>
                {
                    b.HasOne("GandalfInc.DataAccessLayer.Faturacao.DetalheVenda", null)
                        .WithMany("Produtos")
                        .HasForeignKey("DetalheVendaId");

                    b.HasOne("Projeto.DataAccessLayer.Entidades.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorIdentificador");

                    b.HasOne("GandalfInc.DataAccessLayer.Faturacao.Stock", null)
                        .WithMany("ProdutosParaVenda")
                        .HasForeignKey("StockId");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("GandalfInc.DataAccessLayer.Faturacao.PontoDeVenda", b =>
                {
                    b.HasOne("Projeto.DataAccessLayer.Entidades.Loja", "Loja")
                        .WithMany()
                        .HasForeignKey("LojaIdentificador");

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("GandalfInc.DataAccessLayer.Faturacao.Venda", b =>
                {
                    b.HasOne("Projeto.DataAccessLayer.Entidades.Cliente", "Cliente")
                        .WithMany("Compras")
                        .HasForeignKey("ClienteIdentificador");

                    b.HasOne("GandalfInc.DataAccessLayer.Faturacao.DetalheVenda", "DetalheVenda")
                        .WithMany()
                        .HasForeignKey("DetalheVendaId");

                    b.HasOne("Projeto.DataAccessLayer.Entidades.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioIdentificador");

                    b.HasOne("GandalfInc.DataAccessLayer.Faturacao.PontoDeVenda", "PontoDeVenda")
                        .WithMany()
                        .HasForeignKey("PontoDeVendaIdentificador");

                    b.Navigation("Cliente");

                    b.Navigation("DetalheVenda");

                    b.Navigation("Funcionario");

                    b.Navigation("PontoDeVenda");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Cliente", b =>
                {
                    b.HasOne("GandalfInc.DataAccessLayer.Entidades.Morada", "Morada")
                        .WithMany()
                        .HasForeignKey("MoradaId");

                    b.Navigation("Morada");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Fornecedor", b =>
                {
                    b.HasOne("GandalfInc.DataAccessLayer.Entidades.Morada", "Morada")
                        .WithMany()
                        .HasForeignKey("MoradaId");

                    b.Navigation("Morada");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Loja", b =>
                {
                    b.HasOne("GandalfInc.DataAccessLayer.Entidades.Morada", "Morada")
                        .WithMany()
                        .HasForeignKey("MoradaId");

                    b.Navigation("Morada");
                });

            modelBuilder.Entity("GandalfInc.DataAccessLayer.Faturacao.DetalheVenda", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("GandalfInc.DataAccessLayer.Faturacao.Stock", b =>
                {
                    b.Navigation("ProdutosParaVenda");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Cliente", b =>
                {
                    b.Navigation("Compras");
                });
#pragma warning restore 612, 618
        }
    }
}
